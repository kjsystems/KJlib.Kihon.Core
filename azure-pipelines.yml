# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master

variables:
  vmImageOfBuild: windows-2019
  buildConfiguration: Release
  buildProject: kjlib.Kihon/kjlib.Kihon.csproj
  testProjects: test/**/*.csproj


- stage: individual_ci_stage
  condition: eq(variables['Build.Reason'], 'IndividualCI')
  jobs:
  - job: logging
    pool:
      vmImage: $(vmImageOfBuild)
    steps:
    - script: |
        echo master branch recieved Git-push.
        echo Build.Reason is $(Build.Reason)
        echo Build.SourceBranch is $(Build.SourceBranch)
- stage: push_stage
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  jobs:
  - job: pack_job
    displayName: Pack and Push
    pool:
      vmImage: $(vmImageOfBuild)
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'DotNetCoreCLI@2: build'
      inputs:
        command: 'build'
        projects: '$(buildProject)'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'DotNetCoreCLI@2: pack'
      inputs:
        command: 'pack'
        packagesToPack: '$(buildProject)'
        configuration: '$(buildConfiguration)'
        nobuild: true
        versioningScheme: 'off'
    - task: DotNetCoreCLI@2
      displayName: 'DotNetCoreCLI@2: push'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '4b0a92c6-28ec-45d8-b044-b37411c9af60'
